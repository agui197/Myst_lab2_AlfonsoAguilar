source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
library(plotly)
install.packages(c("plotly", "Quandl", "PortfolioAnalytics", "ROI", "knitr", "kableExtra"))
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
View(Quandl.datatable)
View(Quandl.datatable)
install.packages("Quandl")
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
optimize.portfolio?
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
optimize.portfolio
Port1 <- optimize.portfolio(R = Rends,portfolio = Port1,optimize_method = "random",
trace=TRUE,search_size = 500)
Port1 <- portfolio.spec(assets=tk)
Port1 <- add.constraint(portfolio = Port1,
type = "leverage",
min_sum=.99,max_sum=1.01)
# Restriccion 2: Limites superior e inferior para el valor de pesos
Port <- add.constraint(portfolio = Port1,
type = "box",
min=.01,max=.5)
Port1 <- add.objective(portfolio = Port1,type = "return",name = "mean")
Port1 <- optimize.portfolio(R = Rends,portfolio = Port1,optimize_method = "random",
trace=TRUE,search_size = 500)
Port1 <- optimize.portfolio(R = Rends,portfolio = Port1,optimize_method = "random")
Port1 <- optimize.portfolio(R = Rends,portfolio = Port1,optimize_method = "random")
Port1 <- portfolio.spec(assets=tk)
Port1 <- add.constraint(portfolio = Port1,
type = "leverage",
min_sum=.99,max_sum=1.01)
# Restriccion 2: Limites superior e inferior para el valor de pesos
Port <- add.constraint(portfolio = Port1,
type = "box",
min=.01,max=.5)
Port1 <- add.constraint(portfolio, type="position_limit", max_pos=8)
Port1 <- add.objective(portfolio = Port1,type = "return",name = "mean")
Port1 <- optimize.portfolio(R = Rends,portfolio = Port1,optimize_method = "random",
trace=TRUE,search_size = 500)
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
# Remover todos los objetos del "Environment"
rm(list = ls())
###Cargar librerias a utilizar
(library(plotly))  #graficas interactivas
(library(Quandl))  #Descargar precios
(library(PortfolioAnalytics))  #teoria moderna de portafolios
(library(ROI))  #optimizacion para portafolio
(library(knitr))  #opciones de documentacion + codigo
(library(kableExtra))  #tablas en HTML
options(knitr.table.format = "html")
# Cargar el token de QUANDL
Quandl.api_key("Us_v4rfs-m_kLT1skgsQ")
# Funcion para descagar precios
Bajar_Precios <- function(Columns, Tickers, Fecha_In, Fecha_Fn) {
# Funcion para descargar N cantidad de activos desde QUANDL
# -- Dependencias: QUANDL
# -- Columns : columnas a incluir : character : c("date", "adj_close", ... )
# -- Tickers : Tickers o claves de pizarra de los activos : character : "TSLA"
# -- Fecha_In : Fecha Inicial : character : "2017-01-02"
# -- Fecha_Fn : Fecha Final : character : "2017-08-02"
# Peticion para descargar precios
Datos <- Quandl.datatable("WIKI/PRICES", qopts.columns=Columns, ticker=Tickers,
date.gte=Fecha_In, date.lte=Fecha_Fn)
return(Datos)
}
#tickers de accciones y datos a solicitar
tk <- c("TSLA","BBY","HD")
cs <-c("date","adj_close")
#fecha inicial y fecha inicial
fs <- c("2015-08-01","2016-08-01")
#descargar precios
Datos <- list()
for(i in 1:length(tk)){
Datos[[i]] <- Bajar_Precios(Columns = cs,Tickers = tk[i],Fecha_In = fs[1],Fecha_Fn = fs[2])
}
names(Datos) <- tk
for(i in 1:length(tk))
Datos[[i]]$adj_close_r <- c(0, diff(log(Datos[[i]]$adj_close)))
Rends <- xts(x = cbind(Datos[[1]]$adj_close_r, Datos[[2]]$adj_close_r, Datos[[3]]$adj_close_r),
order.by = Datos[[1]]$date)[-1]
names(Rends) <- tk
Port1 <- portfolio.spec(assets=tk)
Port1 <- add.constraint(portfolio = Port1,
type = "leverage",
min_sum=.99,max_sum=1.01)
Port1 <- add.objective(portfolio = Port1,type = "return",name = "mean")
Port1 <- optimize.portfolio(R = Rends,portfolio = Port1,optimize_method = "random",
trace=TRUE,search_size = 500)
min_sum=.99,max_sum=1.01)
# Restriccion 2: Limites superior e inferior para el valor de pesos
Port <- add.constraint(portfolio = Port1,
type = "box",
min=.01,max=.5)
Port1 <- add.objective(portfolio = Port1,type = "return",name = "mean")
Port1 <- optimize.portfolio(R = Rends,portfolio = Port1,optimize_method = "random",
trace=TRUE,search_size = 500)
Port1 <- add.objective(portfolio = Port1,type = "risk",name = "var")
Port1 <- optimize.portfolio(R = Rends,portfolio = Port1,optimize_method = "random",
trace=TRUE,search_size = 500)
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
for(i in 1:length(Port1$random_portfolio_objective_results)) {
Portafolios[[i]]$Pesos  <- Port1$random_portfolio_objective_results[[i]]$weights
Portafolios[[i]]$Medias <- Port1$random_portfolio_objective_results[[i]]$objective_measures$mean
Portafolios[[i]]$Vars   <- var.portfolio(R = Port1$R, weights = Portafolios[[i]]$Pesos)
names(Portafolios[[i]]$Medias) <- NULL
}
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
df_Portafolios <- data.frame(matrix(nrow=length(Port1$random_portfolio_objective_results),
ncol=3, data = 0))
colnames(df_Portafolios) <- c("Rend","Var","Clase")
View(Portafolios)
View(Portafolios)
View(Portafolios)
Portafolios[[1]]$Pesos
Portafolios[[1]]$Medias
Portafolios[[2]]$Medias
Portafolios[[2]]$Vars
View(Portafolios)
View(df_Portafolios)
View(df_Portafolios)
Portafolios[[i]]
Portafolios[i]
for(i in 1:length(Port1$random_portfolio_objective_results)) {
df_Portafolios$Rend[i] <- round(Portafolios[[i]]$Medias*252,4)
df_Portafolios$Var[i]  <- round(sqrt(Portafolios[[i]]$Vars)*sqrt(252),4)
df_Portafolios$Clase[i] <- "No-Frontera"
for(k in 1:length(tk)) {
df_Portafolios[i,paste("Peso_", tk[k],sep="")] <- Portafolios[[i]]$Pesos[k]
df_Portafolios[i,paste("Titulos_ini_", tk[k],sep="")] <-
(Capital_Inicial*Portafolios[[i]]$Pesos[k])%/%Datos[[k]]$adj_close[1]
}
}
# Capital inicial a considerar
Capital_Inicial <- 100000
Comision <- 0.005
for(i in 1:length(Port1$random_portfolio_objective_results)) {
df_Portafolios$Rend[i] <- round(Portafolios[[i]]$Medias*252,4)
df_Portafolios$Var[i]  <- round(sqrt(Portafolios[[i]]$Vars)*sqrt(252),4)
df_Portafolios$Clase[i] <- "No-Frontera"
for(k in 1:length(tk)) {
df_Portafolios[i,paste("Peso_", tk[k],sep="")] <- Portafolios[[i]]$Pesos[k]
df_Portafolios[i,paste("Titulos_ini_", tk[k],sep="")] <-
(Capital_Inicial*Portafolios[[i]]$Pesos[k])%/%Datos[[k]]$adj_close[1]
}
View(df_Portafolios)
View(df_Portafolios)
View(df_Portafolios)
View(df_Portafolios)
View(df_Portafolios)
View(df_Portafolios)
View(df_Portafolios)
View(Portafolios)
View(Portafolios)
View(Port1)
View(Port1)
View(Rends)
View(Rends)
View(df_Portafolios)
rm(list = ls())
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
warnings()
View(Portafolios)
View(df_Portafolios)
Pesos[1,1]
ios <- plot_ly(x=df_Portafolios$Var, y=df_Portafolios$Rend, type='scatter', mode='markers',
name = "Portafolios", marker = list(color="grey", size=7), hoverinfo='text',
text = ~paste('Rendimiento: ', paste(df_Portafolios$Rend*100, "%") ,
'<br> Riesgo: ', paste(df_Portafolios$Var*100, "%") )) %>%
layout(title = "Portafolios (Markowitz)",
xaxis = list(title = "Riesgo (Desviaci?n Est?ndar Anualizada)",
showgrid = F),
yaxis = list(title = "Valor Esperado (Rendimiento Anualizado)"),
legend = list(orientation = 'h', y = -0.25))
Plot_portafolios
Plot_portafolios <- plot_ly(x=df_Portafolios$Var, y=df_Portafolios$Rend, type='scatter', mode='markers',
name = "Portafolios", marker = list(color="grey", size=7), hoverinfo='text',
text = ~paste('Rendimiento: ', paste(df_Portafolios$Rend*100, "%") ,
'<br> Riesgo: ', paste(df_Portafolios$Var*100, "%") )) %>%
layout(title = "Portafolios (Markowitz)",
xaxis = list(title = "Riesgo (Desviaci?n Est?ndar Anualizada)",
showgrid = F),
yaxis = list(title = "Valor Esperado (Rendimiento Anualizado)"),
legend = list(orientation = 'h', y = -0.25))
Plot_portafolios
source('C:/Users/if702319/Desktop/Trading/Myst_lab1_AlfonsoAguilar/Lab1_Myst.R', echo=TRUE)
source('C:/Users/if702319/Desktop/Trading/Myst_lab2_AlfonsoAguilar/Lab2_Myst.R', echo=TRUE)
setwd("C:/Users/if702319/Desktop/Trading/Myst_lab2_AlfonsoAguilar")
source('C:/Users/if702319/Desktop/Trading/Myst_lab2_AlfonsoAguilar/Lab2_Myst.R', echo=TRUE)
source('C:/Users/if702319/Desktop/Trading/Myst_lab2_AlfonsoAguilar/Lab2_Myst.R', echo=TRUE)
